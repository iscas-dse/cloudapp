<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd 
	http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd"
	default-lazy-init="true">
	<!--spring 拦截器，主要作用是拦截用户的请求并进行相应处理 -->
	<mvc:interceptors>
		<!-- 使用bean定义一个Interceptor，直接定义在mvc:interceptors根下面的Interceptor将拦截所有的请求 -->
		<bean
			class="cn.ac.iscas.cloudeploy.v2.user.security.authorization.GudgeonHandlerInterceptor"></bean>
		<mvc:interceptor>
			<mvc:mapping path="/v2/files/**" />
			<mvc:mapping path="/v2/hosts/**" />
			<mvc:mapping path="/v2/resources/**" />
			<mvc:mapping path="/v2/templates/**" />
			<mvc:mapping path="/v2/applications/**" />
			<mvc:mapping path="/v2/views/**" />
			<bean
				class="cn.ac.iscas.cloudeploy.v2.user.security.authorization.AuthenticationHandlerInterceptor"></bean>
		</mvc:interceptor>
		<mvc:interceptor>
			<mvc:mapping path="/v2/hosts/**" />
			<bean
				class="cn.ac.iscas.cloudeploy.v2.authorization.host.HostAuthorizationHandlerInterceptor"></bean>
		</mvc:interceptor>
	</mvc:interceptors>
</beans>